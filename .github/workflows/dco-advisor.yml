name: DCO Advisor Bot

on:
  pull_request:
    types: [opened, reopened, synchronize]
  check_run:
    types: [completed]

permissions:
  pull-requests: write
  issues: write

jobs:
  dco_advisor:
    runs-on: ubuntu-latest
    steps:
      - name: Handle DCO check result
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request || context.payload.check_run?.pull_requests?.[0];
            if (!pr) return;

            const checkRun = context.payload.check_run;

            if (!checkRun || !checkRun.name.toLowerCase().includes("dco")) {
                console.log("Not a DCO check_run ‚Äî skipping.");
                return;
            }

            const prNumber = pr.number;
            const baseRef = pr.base.ref;
            const headSha =
              context.payload.check_run?.head_sha ||
              pr.head?.sha;

            // Get all check runs for the latest commit (headSha)
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: headSha
            });

            // Find the DCO check *for this specific commit*
            const dcoCheck = checks.check_runs.find(run =>
              run.name.toLowerCase().includes("dco") &&
              !run.name.toLowerCase().includes("dco_advisor") &&
              run.head_sha === headSha
            );
            if (!dcoCheck) return;

            console.log("HEAD SHA:", headSha);
            console.log("All check runs:");
            checks.check_runs.forEach(run => {
            console.log(`- ${run.name} (${run.status}/${run.conclusion}) @ ${run.head_sha}`);
            });

            // Get existing comments on the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            // Look for a previous bot comment
            const existingComment = comments.find(c =>
              c.body.includes("<!-- dco-advice-bot -->")
            );

            // Define the failure comment body
            const failureBody = [
              '<!-- dco-advice-bot -->',
              '‚ùå **DCO Check Failed**',
              '',
              `Hi @${pr.user.login}, your pull request has failed the Developer Certificate of Origin (DCO) check.`,
              '',
              'Because this repository supports **remediation commits**, you can fix this without rewriting history!',
              '',
              '---',
              '',
              '### üõ† Quick Fix: Add a remediation commit',
              '```bash',
              'git commit --allow-empty -s -m "chore: DCO remediation for failing commits"',
              'git push',
              '```',
              '',
              'This adds an empty signed commit to declare you agree with your previous commits.',
              '',
              '---',
              '',
              '<details>',
              '<summary>üîß Advanced: Sign off each commit</summary>',
              '',
              'If you prefer to re-sign your existing commits:',
              '',
              '**For the latest commit:**',
              '```bash',
              'git commit --amend --signoff',
              'git push --force',
              '```',
              '',
              '**For multiple commits:**',
              '```bash',
              `git rebase --signoff origin/${baseRef}`,
              'git push --force-with-lease',
              '```',
              '',
              '</details>',
              '',
              '---',
              '',
              'More info: [DCO Fix Guide](https://github.com/probot/dco#how-it-works)'
            ].join('\n');

            const successBody = [
              '<!-- dco-advice-bot -->',
              '‚úÖ **DCO Check Passed**',
              '',
              `Thanks @${pr.user.login}, all your commits are properly signed off. üéâ`
            ].join('\n');

            console.log(`DCO check status for ${headSha}: ${dcoCheck.conclusion}`);
            const newBody = dcoCheck.conclusion === "failure" ? failureBody : successBody;

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: newBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: newBody
              });
            }
